/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guijframe;

import static guijframe.PasswordUtils.generateSecurePassword;
import static guijframe.PasswordUtils.getSalt;
import static guijframe.PasswordUtils.verifyUserPassword;
import java.awt.Color;
import static java.lang.Math.random;
import java.util.ArrayList;
import java.util.Random;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author w1682889 Hou In Lei
 */
public class register extends javax.swing.JFrame {

    /**
     * Creates new form register
     */
    public register() {
        initComponents();
        this.getContentPane().setBackground(Color.CYAN);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelRegistration = new javax.swing.JLabel();
        jLabelFirstName = new javax.swing.JLabel();
        jTextFieldFirstName = new javax.swing.JTextField();
        jLabelSurname = new javax.swing.JLabel();
        jTextFieldSurname = new javax.swing.JTextField();
        jLabelUsername = new javax.swing.JLabel();
        jTextFieldUsername = new javax.swing.JTextField();
        jLabeEmail = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jLabelMW = new javax.swing.JLabel();
        jTextFieldMW = new javax.swing.JTextField();
        jTextFieldPW = new javax.swing.JTextField();
        jLabelPW = new javax.swing.JLabel();
        jLabelCPW = new javax.swing.JLabel();
        jTextFieldCPW = new javax.swing.JTextField();
        ATCcheck = new javax.swing.JCheckBox();
        jButtonSignUp = new javax.swing.JButton();
        jButtonLogin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registration");
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(153, 255, 255));

        jLabelRegistration.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        jLabelRegistration.setForeground(java.awt.Color.blue);
        jLabelRegistration.setText("REGISTRATION");

        jLabelFirstName.setText("First Name");

        jLabelSurname.setText("Surname");

        jTextFieldSurname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSurnameActionPerformed(evt);
            }
        });

        jLabelUsername.setText("Username");

        jTextFieldUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUsernameActionPerformed(evt);
            }
        });

        jLabeEmail.setText("Email");

        jTextFieldEmail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTextFieldEmailMouseEntered(evt);
            }
        });
        jTextFieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmailActionPerformed(evt);
            }
        });

        jLabelMW.setText("Memorable Word");

        jTextFieldMW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMWActionPerformed(evt);
            }
        });

        jTextFieldPW.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTextFieldPWMouseEntered(evt);
            }
        });
        jTextFieldPW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPWActionPerformed(evt);
            }
        });

        jLabelPW.setText("Password");

        jLabelCPW.setText("Confirm Password");

        jTextFieldCPW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCPWActionPerformed(evt);
            }
        });

        ATCcheck.setBackground(new java.awt.Color(255, 255, 102));
        ATCcheck.setText("Agree to the Terms & Conditions");

        jButtonSignUp.setText("SIGN UP");
        jButtonSignUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSignUpMouseClicked(evt);
            }
        });

        jButtonLogin.setText("LOGIN");
        jButtonLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonLoginMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelMW)
                                    .addComponent(jLabelCPW))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldMW)
                                    .addComponent(jTextFieldCPW, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelPW, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(jTextFieldPW, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabeEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabelFirstName)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabelUsername)
                                            .addGap(5, 5, 5))))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelRegistration, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextFieldFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                                            .addComponent(jTextFieldSurname, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jTextFieldUsername, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jTextFieldEmail)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(ATCcheck, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jButtonSignUp)
                        .addGap(47, 47, 47)
                        .addComponent(jButtonLogin)))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelRegistration, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFirstName)
                    .addComponent(jTextFieldFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSurname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUsername)
                    .addComponent(jTextFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabeEmail))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldMW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMW))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPW))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCPW, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCPW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(ATCcheck)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSignUp)
                    .addComponent(jButtonLogin))
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldSurnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSurnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSurnameActionPerformed

    private void jTextFieldUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldUsernameActionPerformed

    private void jTextFieldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEmailActionPerformed

    private void jTextFieldMWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMWActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMWActionPerformed

    private void jTextFieldPWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPWActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPWActionPerformed

    private void jTextFieldCPWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCPWActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCPWActionPerformed

    private void jButtonSignUpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSignUpMouseClicked
        /**
         * register validation
         */
        FirstName = jTextFieldFirstName.getText();
        Surname = jTextFieldSurname.getText();
        Username = jTextFieldUsername.getText();
        Email = jTextFieldEmail.getText();
        MemorableWord = jTextFieldMW.getText();
        Password = jTextFieldPW.getText();
        ConfirmPassword = jTextFieldCPW.getText();
        /**
         * set the formats for the email and password
         */
        String emailFormat = "^(.+)@(.+)$";
        String pwFormat = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*](?=\\S+$).{8,15}$";
        Pattern emailpat = Pattern.compile(emailFormat);
        Pattern pwpat = Pattern.compile(pwFormat);
        /**
         * connect to the users database validate the password
         */
        obj = new SqliteConnection();
        if (FirstName.equals("") || Surname.equals("") || Username.equals("") || Email.equals("") || MemorableWord.equals("") || Password.equals("") || ConfirmPassword.equals("")) {
            JOptionPane.showMessageDialog(this, "Please fill in all the information!");
        } else {
            if (!pwpat.matcher(Password).matches()) {
                JOptionPane.showMessageDialog(this, "Invaild password format");
            } else {
                if (!Password.equals(ConfirmPassword)) {
                    JOptionPane.showMessageDialog(this, "Passwords don't match!");
                } else {
                    if (!emailpat.matcher(Email).matches()) {
                        JOptionPane.showMessageDialog(this, "Invalid email format!");
                    } else {
                        if (!ATCcheck.isSelected()) {
                            JOptionPane.showMessageDialog(this, "Please agree with the Term & Conditions");
                        } else {
                            /**
                             * generate the salt randomly and create the
                             * password store them with the detail the user
                             * enters into the database
                             */
                            Random gene = new Random();
                            int randomNo = gene.nextInt(10);
                            String slt = getSalt(randomNo);
                            String pwd = generateSecurePassword(Password, slt);
                            obj.insert(FirstName, Surname, Username, Email, MemorableWord, pwd, slt);
                            JOptionPane.showMessageDialog(this, "User registered, please login as " + Username + " now.");
                        }
                    }
                }
            }
        }


    }//GEN-LAST:event_jButtonSignUpMouseClicked

    private void jTextFieldEmailMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldEmailMouseEntered
        /**
         * show email example when mouse enter text field
         */
        jTextFieldEmail.setToolTipText("Email format example: xxxxx@gmail.com ; No special character is allowed");
    }//GEN-LAST:event_jTextFieldEmailMouseEntered

    private void jTextFieldPWMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldPWMouseEntered
        /**
         * validates the password format, it contains: between length 8 and 15
         * character at least one number at least one lower letter at least one
         * upper letter at least one special character
         */
        Password = jTextFieldPW.getText();
        boolean valid = true;
        ArrayList<String> warning = new ArrayList<String>();
        if (Password.length() > 15 || Password.length() < 8) {
            String message = "Password should be less than 15 and more than 8 characters in length.";
            warning.add(message);
            valid = false;
        }
        if (!Password.matches(".*[0-9].*")) {
            String message = "Password should contain atleast one number.";
            warning.add(message);
            valid = false;
        }
        if (!Password.matches(".*[a-z].*")) {
            String message = "Password should contain atleast one lower case alphabet.";
            warning.add(message);
            valid = false;
        }
        if (!Password.matches(".*[A-Z].*")) {
            String message = "Password should contain atleast one upper case alphabet.";
            warning.add(message);
            valid = false;
        }
        if (!Password.matches("(.*[,~,!,@,#,$,%,^,&,*,(,),-,_,=,+,[,{,],},|,;,:,<,>,/,?].*$)")) {
            String message = "Password should contain atleast one special character.";
            warning.add(message);
            valid = false;
        }
        if (valid) {
            jTextFieldPW.setToolTipText("Password is valid");
        } else {
            jTextFieldPW.setToolTipText(warning.toString());
        }
    }//GEN-LAST:event_jTextFieldPWMouseEntered

    private void jButtonLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonLoginMouseClicked
        /**
         * close the register page and create the register page
         */
        this.setVisible(false);
        login myLogin = new login();
        myLogin.setVisible(true);
    }//GEN-LAST:event_jButtonLoginMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ATCcheck;
    private javax.swing.JButton jButtonLogin;
    private javax.swing.JButton jButtonSignUp;
    private javax.swing.JLabel jLabeEmail;
    private javax.swing.JLabel jLabelCPW;
    private javax.swing.JLabel jLabelFirstName;
    private javax.swing.JLabel jLabelMW;
    private javax.swing.JLabel jLabelPW;
    private javax.swing.JLabel jLabelRegistration;
    private javax.swing.JLabel jLabelSurname;
    private javax.swing.JLabel jLabelUsername;
    private javax.swing.JTextField jTextFieldCPW;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldFirstName;
    private javax.swing.JTextField jTextFieldMW;
    private javax.swing.JTextField jTextFieldPW;
    private javax.swing.JTextField jTextFieldSurname;
    private javax.swing.JTextField jTextFieldUsername;
    // End of variables declaration//GEN-END:variables
    private static String FirstName;
    private static String Surname;
    private static String Username;
    private static String Email;
    private static String MemorableWord;
    private static String Password;
    private static String ConfirmPassword;
    private static SqliteConnection obj;
}
